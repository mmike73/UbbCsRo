// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ChatProtocol_v3.proto
// Protobuf Java Version: 4.29.3

package chat.network.protobuffprotocol;

public interface ChatResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chat.protocol.ChatResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Identifies which request is filled in.
   * </pre>
   *
   * <code>.chat.protocol.ChatResponse.Type type = 1;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * Identifies which request is filled in.
   * </pre>
   *
   * <code>.chat.protocol.ChatResponse.Type type = 1;</code>
   * @return The type.
   */
  chat.network.protobuffprotocol.ChatResponse.Type getType();

  /**
   * <pre>
   * One of the following will be filled in, depending on the type.
   * </pre>
   *
   * <code>string error = 2;</code>
   * @return The error.
   */
  java.lang.String getError();
  /**
   * <pre>
   * One of the following will be filled in, depending on the type.
   * </pre>
   *
   * <code>string error = 2;</code>
   * @return The bytes for error.
   */
  com.google.protobuf.ByteString
      getErrorBytes();

  /**
   * <code>repeated .chat.protocol.User friends = 3;</code>
   */
  java.util.List<chat.network.protobuffprotocol.User> 
      getFriendsList();
  /**
   * <code>repeated .chat.protocol.User friends = 3;</code>
   */
  chat.network.protobuffprotocol.User getFriends(int index);
  /**
   * <code>repeated .chat.protocol.User friends = 3;</code>
   */
  int getFriendsCount();
  /**
   * <code>repeated .chat.protocol.User friends = 3;</code>
   */
  java.util.List<? extends chat.network.protobuffprotocol.UserOrBuilder> 
      getFriendsOrBuilderList();
  /**
   * <code>repeated .chat.protocol.User friends = 3;</code>
   */
  chat.network.protobuffprotocol.UserOrBuilder getFriendsOrBuilder(
      int index);

  /**
   * <code>.chat.protocol.User user = 4;</code>
   * @return Whether the user field is set.
   */
  boolean hasUser();
  /**
   * <code>.chat.protocol.User user = 4;</code>
   * @return The user.
   */
  chat.network.protobuffprotocol.User getUser();
  /**
   * <code>.chat.protocol.User user = 4;</code>
   */
  chat.network.protobuffprotocol.UserOrBuilder getUserOrBuilder();

  /**
   * <code>.chat.protocol.Message message = 5;</code>
   * @return Whether the message field is set.
   */
  boolean hasMessage();
  /**
   * <code>.chat.protocol.Message message = 5;</code>
   * @return The message.
   */
  chat.network.protobuffprotocol.Message getMessage();
  /**
   * <code>.chat.protocol.Message message = 5;</code>
   */
  chat.network.protobuffprotocol.MessageOrBuilder getMessageOrBuilder();
}
